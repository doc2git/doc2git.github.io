{"meta":{"title":"doc2git.com.cn","subtitle":null,"description":null,"author":"doc2git","url":"http://doc2git"},"pages":[{"title":"","date":"2017-10-01T10:56:48.019Z","updated":"2017-09-28T05:19:57.574Z","comments":true,"path":"README.html","permalink":"http://doc2git/README.html","excerpt":"","text":"mardowns-testing-of-hexo"},{"title":"category","date":"2017-09-25T16:16:31.000Z","updated":"2017-10-02T15:27:00.467Z","comments":true,"path":"categories/index.html","permalink":"http://doc2git/categories/index.html","excerpt":"","text":"Comming Soon …"},{"title":"home","date":"2017-09-25T09:46:32.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"home/index.html","permalink":"http://doc2git/home/index.html","excerpt":"","text":"home page."},{"title":"tags","date":"2017-09-25T10:23:42.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"tags/index.html","permalink":"http://doc2git/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Todo-2017.10-week2","slug":"Todo","date":"2017-12-30T16:43:05.862Z","updated":"2017-10-17T07:11:42.184Z","comments":true,"path":"2017/12/31/Todo/","link":"","permalink":"http://doc2git/2017/12/31/Todo/","excerpt":"","text":"DONE 跟进doc2git.com.cn的审核，并完成其代替换 doc2git.github.io的操作。 DONE 对doc2git.wang进行备案，并设置将其到我的 码市。 DONE 打电话问码云客服，为啥我现在不能push代码更新到码云repo.** 恒创vps 123456789101112**DONE** *doc2git.wang* 解析到 恒创上部署的 *doc2git.wang* 虚拟主机，在其主页中用js重定向到 *gitee.com/doc2git* 。**DONE** 实现定时更新 恒创上部署的 *doc2git.wang* 虚拟主机中的 主页, 让其与 *gitee.com/doc2git* 大致同步，比如一天同步一次, 因为会在window.onload 绑定的函数中重定向到 *gitee.com/doc2git*,所以对同步的要求不高，适当同步即可，这对seo是有相当大影响的。**DONE** 将 *get-bootstrap* 静态项目部署到恒创vps上，使用nginx代理。规划在恒创vps上建立js,css,images静态资源站，以供doc2git.github.io, gitee.com/doc2git/，bootzee.com/mytemplates 由三方提供的由我开发并维护的页面等使用。 html-uri–relative2protocal 12- 实现 uriReplaceSrcList.js 中数组的一键 生成, 或者自动生成。- 完成 纯粹nodejs代码和命令行使用方式，以及&quot;uriReplaceSrcList.js 中导入数组的一键 生成, 或者自动生成&quot;的文档撰写。 DONE 脚本化实现快速同步github,码云,本地版本同步. 12**DONE** 本地git--bare库的创建;**DONE** github,码云,本地版本 三个uri添加到 git remote all 命令队列中; repo中的双镜像处理 12**DONE** 在我的hexo博客中将所有doc2git.com字符串改为doc2git.com.cn；在我在线及离线项目中添加doc2git.com.cn，以及对应项目的码云镜像; DONE 让 git@github.com:doc2git/git-deployer 更便于使用 1为以上项目简单写写README.md DONE 参照 firefox插件开发 写个最简单的firefox插件 hello, world.","categories":[{"name":"plan","slug":"plan","permalink":"http://doc2git/categories/plan/"},{"name":"todo","slug":"plan/todo","permalink":"http://doc2git/categories/plan/todo/"},{"name":"2017","slug":"plan/todo/2017","permalink":"http://doc2git/categories/plan/todo/2017/"}],"tags":[{"name":"plan","slug":"plan","permalink":"http://doc2git/tags/plan/"},{"name":"todo","slug":"todo","permalink":"http://doc2git/tags/todo/"},{"name":"2017","slug":"2017","permalink":"http://doc2git/tags/2017/"},{"name":"week2","slug":"week2","permalink":"http://doc2git/tags/week2/"}]},{"title":"来来来，欢快的写UI，立刻view渲染！","slug":"来来来，欢快的写UI，立刻view渲染！","date":"2017-11-02T14:12:53.000Z","updated":"2017-10-12T14:45:32.313Z","comments":true,"path":"2017/11/02/来来来，欢快的写UI，立刻view渲染！/","link":"","permalink":"http://doc2git/2017/11/02/来来来，欢快的写UI，立刻view渲染！/","excerpt":"","text":"在线编辑UI，即刻预览: Version 1: link: http://doc2git.com.cn/edit-code-view--pad/ state: 只是修复bug，基本上不加新功能 inspiration: Any html render 特性: 文本框输入什么（html），显示框就渲染什么(html)。 Version 2: link: http://doc2git.com.cn/source--hack--view/ state: 正在利用闲余时间开发中 view-intention: Vue 特性: 文本框输入什么（html），显示框就渲染什么(html)。 左侧iframe头部导航栏有键入uri, 转跳键入的ｕri, 浏览历史倒退和前进功能。 可能会实现: 第一屏尽可能多地用来显示干货内容 navbar当左侧阅读源iframe的上边缘的style.top大于触碰到顶部导航条显示高度时，隐藏该顶部导航条;当左侧阅读源iframe的上边缘的style.top小于于触碰到顶部导航条显示高度时，现实该顶部导航条; footer默认隐藏footer, footer将在暂时未定的某个滚动条s滚动到底部时显示；footer将在暂时未定的某个滚动条s滚离底部高度ｙ时隐藏滚动条； 考虑左边代码区域的渲染触发按钮能否优雅地放到接近或浮动与渲染输出区域的xy位置 加入可选的vim操作键功能 Version 3: link: git@github.com:doc2git/inspiration-responsive-view.git state: 进入开发期 inspiration: boostrap 构想: 上面是能让bootstrap，960等响应式设计开发独占全部屏幕的区域。 考虑一个比优雅的实现方式，实现上边页面单独出现html/css调试控制面板 下面左边是参考源（设计图，实践较好的代码，或者ui界面）。 关于尺寸的问题，用transform:scale(arg)或者类似的css属性来处理,使得该区域占较少的屏幕尺寸。 下面右边是实际的编码区,尝试确保阅读方便。 输入便捷的问题，通过引用CodeMirror的vim模块实现。","categories":[{"name":"工具","slug":"工具","permalink":"http://doc2git/categories/工具/"},{"name":"UI代码","slug":"工具/UI代码","permalink":"http://doc2git/categories/工具/UI代码/"},{"name":"便捷测试","slug":"工具/UI代码/便捷测试","permalink":"http://doc2git/categories/工具/UI代码/便捷测试/"}],"tags":[{"name":"在线编辑UI","slug":"在线编辑UI","permalink":"http://doc2git/tags/在线编辑UI/"},{"name":"即刻预览","slug":"即刻预览","permalink":"http://doc2git/tags/即刻预览/"},{"name":"交互","slug":"交互","permalink":"http://doc2git/tags/交互/"},{"name":"便捷测试","slug":"便捷测试","permalink":"http://doc2git/tags/便捷测试/"},{"name":"文档学习","slug":"文档学习","permalink":"http://doc2git/tags/文档学习/"},{"name":"教程学习","slug":"教程学习","permalink":"http://doc2git/tags/教程学习/"},{"name":"iframe跳转","slug":"iframe跳转","permalink":"http://doc2git/tags/iframe跳转/"},{"name":"iframe历史","slug":"iframe历史","permalink":"http://doc2git/tags/iframe历史/"},{"name":"工具","slug":"工具","permalink":"http://doc2git/tags/工具/"},{"name":"灵感","slug":"灵感","permalink":"http://doc2git/tags/灵感/"}]},{"title":"关于js对象的深浅复制","slug":"关于js对象的深浅复制","date":"2017-10-17T05:49:44.000Z","updated":"2017-10-17T05:52:43.986Z","comments":true,"path":"2017/10/17/关于js对象的深浅复制/","link":"","permalink":"http://doc2git/2017/10/17/关于js对象的深浅复制/","excerpt":"","text":"https://developer.mozilla.org/zh-CN/docs/Web/Guide/API/DOM/The_structured_clone_algorithm","categories":[],"tags":[]},{"title":"firefox插件开发","slug":"firefox插件开发","date":"2017-10-16T17:05:45.992Z","updated":"2017-10-17T04:15:04.394Z","comments":true,"path":"2017/10/17/firefox插件开发/","link":"","permalink":"http://doc2git/2017/10/17/firefox插件开发/","excerpt":"","text":"预计参考资料： Firefox扩展开发 （插件开发） Extension开发 入门教程 5步走 五步走： https://link.zhihu.com/?target=http%3A//www.cnblogs.com/kenkofox/archive/2010/05/10/1731557.html Firefox插件（plugins）开发实用指南： https://link.zhihu.com/?target=http%3A//www.crazycpp.com/%3Fp%3D181 Firefox 扩展开发常用工具： https://link.zhihu.com/?target=http%3A//www.crazycpp.com/%3Fp%3D181 我的Firefox插件开发之旅： https://link.zhihu.com/?target=http%3A//www.cppblog.com/epubcn/archive/2008/11/10/66502.html firefox插件Firebug的使用教程firefox插件Firebug的使用教程_javascript技巧： https://link.zhihu.com/?target=http%3A//www.jb51.net/article/21706.htm 目标：较快的成工跑一次 开发firefox插件的流程。项目名：borderify实际尝试开发过程中参考过的资料： https://developer.mozilla.org/zh-CN/Add-ons/WebExtensions/Your_first_WebExtension https://developer.mozilla.org/zh-CN/Add-ons/WebExtensions/Content_scripts https://developer.mozilla.org/zh-CN/Add-ons/WebExtensions/Match_patterns https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage","categories":[],"tags":[]},{"title":"前端静态资源库","slug":"静态资源库","date":"2017-10-15T10:04:36.000Z","updated":"2017-10-15T10:14:39.156Z","comments":true,"path":"2017/10/15/静态资源库/","link":"","permalink":"http://doc2git/2017/10/15/静态资源库/","excerpt":"","text":"前端静态资源库, 首个支持 HTTP/2 的 CDN 服务, 含有多个框架（vue, react, jquery, zipto … ）资源多个版本，和字体库. 1https://cdn.baomitu.com/ 我的bootstrap静态模板库： 123 + http://bootstrap.doc2git.com + http://bootzee.com/mytemplates + http://bootzee.com/templates","categories":[],"tags":[]},{"title":"DNS服务器","slug":"Untitled","date":"2017-10-13T04:58:51.000Z","updated":"2017-10-13T05:04:22.730Z","comments":true,"path":"2017/10/13/Untitled/","link":"","permalink":"http://doc2git/2017/10/13/Untitled/","excerpt":"","text":"如何配置BIND作为在Ubuntu 16.04专用网络DNS服务器: https://www.howtoing.com/how-to-configure-bind-as-a-private-network-dns-server-on-ubuntu-16-04/","categories":[{"name":"代理","slug":"代理","permalink":"http://doc2git/categories/代理/"},{"name":"转跳","slug":"代理/转跳","permalink":"http://doc2git/categories/代理/转跳/"},{"name":"dns","slug":"代理/转跳/dns","permalink":"http://doc2git/categories/代理/转跳/dns/"}],"tags":[{"name":"解析","slug":"解析","permalink":"http://doc2git/tags/解析/"},{"name":"转跳","slug":"转跳","permalink":"http://doc2git/tags/转跳/"},{"name":"代理","slug":"代理","permalink":"http://doc2git/tags/代理/"},{"name":"转发","slug":"转发","permalink":"http://doc2git/tags/转发/"},{"name":"ip","slug":"ip","permalink":"http://doc2git/tags/ip/"},{"name":"dns","slug":"dns","permalink":"http://doc2git/tags/dns/"}]},{"title":"Nginx参考资料链群","slug":"nginx参考资料链群","date":"2017-10-13T04:53:54.000Z","updated":"2017-10-13T05:06:25.821Z","comments":true,"path":"2017/10/13/nginx参考资料链群/","link":"","permalink":"http://doc2git/2017/10/13/nginx参考资料链群/","excerpt":"","text":"Nginx反向代理Google： https://blog.linuxeye.cn/399.html Nginx简单转跳和反向代理： https://hack0nair.me/2014-10-25-how-to-setup-reverse-proxy-by-nginx/","categories":[{"name":"nginx","slug":"nginx","permalink":"http://doc2git/categories/nginx/"}],"tags":[{"name":"代理","slug":"代理","permalink":"http://doc2git/tags/代理/"},{"name":"转发","slug":"转发","permalink":"http://doc2git/tags/转发/"},{"name":"nginx","slug":"nginx","permalink":"http://doc2git/tags/nginx/"},{"name":"静态资源","slug":"静态资源","permalink":"http://doc2git/tags/静态资源/"},{"name":"正向代理","slug":"正向代理","permalink":"http://doc2git/tags/正向代理/"},{"name":"反向代理","slug":"反向代理","permalink":"http://doc2git/tags/反向代理/"},{"name":"负载均衡","slug":"负载均衡","permalink":"http://doc2git/tags/负载均衡/"}]},{"title":"README.md of html-uri--relative2protocal","slug":"README.md of html-url--relative2protocal","date":"2017-10-10T02:52:03.127Z","updated":"2017-10-12T14:55:34.251Z","comments":true,"path":"2017/10/10/README.md of html-url--relative2protocal/","link":"","permalink":"http://doc2git/2017/10/10/README.md of html-url--relative2protocal/","excerpt":"","text":"将html中的uri批量智能转换成定制的urn + uri前缀安装:12git clone github.com:doc2git/html-uri--relative2protocal.gitnpm i 使用案例:使用案例一:触发命令：1node replaceInAllHtml.js 关键触发源码(in replaceInAllHtml.js)： 123var replaceRelativeUriToProtocalUriInHtml = require(&apos;./index.js&apos;);var uriReplaceSrcList = require(&apos;./uriReplaceSrcList.js&apos;);replaceRelativeUriToProtocalUriInHtml(&apos;http://localhost:3378/a/b/c/d/e/f/g&apos;, ...uriReplaceSrcList); ‘./uriReplaceSrcList.js’快速生成方式： 1find test-dir -type f | grep &apos;\\index\\.html&apos; &gt; ./uriReplaceSrcList.js ‘./uriReplaceSrcList.js’ 可以是是以下格式的：1234module.exports = [ &apos;/home/doc2git/bootstrap/url-absolute/test-dir/index.html&apos;, &apos;/home/doc2git/bootstrap/url-absolute/test-dir/another.index.html&apos;] 或者：… (你喜欢的导出方式)目前目前版本还没写逐行读入，生成’./uriReplaceSrcList.js’，（因为vim编辑很爽），在稍后的版本中会加入。 使用案例二：触发命令：1find test-dir -type f | grep &apos;\\index.html\\|test\\.html&apos; | xargs node index.js &apos;http://localhost:3354/a/b/c/d/e/f/g/h&apos; 生成的目录结构变更： ) 因为多向 node index.js 传了一个 test.html，‘(… ｜ grep …)’，所以输出多输出了test&lt; 标记名 &gt;.html; 上一行所讲的标记名是可变的：replaceRelativeUriToProtocalUriInHtml 中有如下函数定义.123let defaultFnRenameFileRule = function (inputFilename) &#123; return inputFilename.replace(/\\.html$/, &apos;&apos;) + &apos;-converted&apos; + &apos;.html&apos;; &#125;; 也可以在 案例一 中的 replaceInAllHtml.js 中调用replaceRelativeUriToProtocalUriInHtml时传入添加:1234let defaultFnRenameFileRule = function (inputFilename) &#123; return inputFilename.replace(/\\.html$/, &apos;&apos;) + &apos;-converted&apos; + &apos;.html&apos;; &#125;;replaceRelativeUriToProtocalUriInHtml(uriBase, defaultFnRenameFileRule, ...args); Other functionability: Maybe comming soon …. 如果发现有bug, 欢迎邮箱联系我：doc2git@yahoo.com ; Enjoy it!","categories":[{"name":"工具","slug":"工具","permalink":"http://doc2git/categories/工具/"},{"name":"nodejs","slug":"工具/nodejs","permalink":"http://doc2git/categories/工具/nodejs/"},{"name":"url","slug":"工具/nodejs/url","permalink":"http://doc2git/categories/工具/nodejs/url/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://doc2git/tags/nodejs/"},{"name":"扒站","slug":"扒站","permalink":"http://doc2git/tags/扒站/"},{"name":"uri转换","slug":"uri转换","permalink":"http://doc2git/tags/uri转换/"},{"name":"智能替换uri","slug":"智能替换uri","permalink":"http://doc2git/tags/智能替换uri/"},{"name":"批量","slug":"批量","permalink":"http://doc2git/tags/批量/"},{"name":"一键","slug":"一键","permalink":"http://doc2git/tags/一键/"}]},{"title":"firefox开启devtools-html　server的参考资料uri备忘","slug":"firefox开启devtools-html　server的参考资料uri备忘","date":"2017-10-09T05:47:50.378Z","updated":"2017-10-09T13:54:42.056Z","comments":true,"path":"2017/10/09/firefox开启devtools-html　server的参考资料uri备忘/","link":"","permalink":"http://doc2git/2017/10/09/firefox开启devtools-html　server的参考资料uri备忘/","excerpt":"","text":"firefox开启devtools-html server的参考资料uri备忘 repo: git@github.com:devtools-html/debugger.html.git issue: https://github.com/devtools-html/debugger.html/issues/1069 解决firefox死循环alert弹窗提示“传入连接”： https://developer.mozilla.org/en-US/docs/Mozilla/Debugging/Debugging_JavaScript","categories":[],"tags":[]},{"title":"我的vpn server on ubuntu16 搭建","slug":"我的vpn server on ubuntu16 搭建","date":"2017-10-07T16:57:26.000Z","updated":"2017-10-12T14:56:19.928Z","comments":true,"path":"2017/10/08/我的vpn server on ubuntu16 搭建/","link":"","permalink":"http://doc2git/2017/10/08/我的vpn server on ubuntu16 搭建/","excerpt":"","text":"参考链接我的主要参考uri： http://blog.csdn.net/hanshileiai/article/details/49205317 我的次要参考uri： http://www.jianshu.com/p/a8d41e7dfbc6网上讲这个内容的文章比较多，但我就喜欢这两篇，这样已经够了。讲服务端的比较多，我就不原样搬砖了，说一下我以为需要注意的地方. 服务端 关于 /etc/pptpd.conf中localip - 网上有很多教程是说指定为跟客户端统一网段，我这样配置没有成功。 在我的例子中是 应该指定为服务器的外网网卡的局域网ip。 关于开启1723端口 以上主要参考uri链接文中没有详述 其实应该是: 开启gre协议，并打开服务器47,1723号端口。使用VPN需要开启gre协议，而gre协议需要使用服务器的47和1723号端口,具体步骤如下 123sudo iptables -A INPUT -p gre -j ACCEPT sudo iptables -A INPUT -p tcp --dport 1723 -j ACCEPT sudo iptables -A INPUT -p tcp --dport 47 -j ACCEPT 详见我的次要参考链接 http://www.jianshu.com/p/a8d41e7dfbc6 通过参考以上两个链接的参考，结合实际交互，基本能把服务端配置妥当。 我配置服务端修改过得文件： /etc/ppp/pptpd-option /etc/ppp/chap-secrets /etc/pptpd.conf /etc/sysctl.conf /etc/ppp/chap-secrets 行百里路半九十在我的例子中,我的两台客户端pc都是ubuntu16.04，网络接入方式是wifi 客户端从图形界面中调出 网络连接 配置项框； + 配置client vpn连接 实例: - 点击右上角 &apos;新增&apos; - 选择 &apos;以太网&apos; - 选择 &apos;点到点隧道协议（pptp）&apos; - 点击 &apos;新建&apos; - 出现vpn选项表单，依次输入 &apos;网关&apos; ，&apos;vpn server&apos; 中设置的客户 &apos;用户名&apos; 和 &apos;密码&apos; (根据情况选择密码记住或每次询问) - 选择 &apos;高级按钮&apos; - 勾选 &apos;使用点到点加密&apos; - 勾选 &apos;允许有状态的加密&apos; - 勾选 &apos;发送ppp回响包&apos; - 点击 &apos;确定&apos; - 点击 &apos;保存&apos; + 配置client &apos;WI-FI&apos;: - 选中自己要接入的wifi配置实例 - 点击 &apos;编辑&apos; 按钮 - 出现选项卡，当前选中的是 &apos;WI-FI&apos; 栏目 - 选中常规栏目，选择 &apos;使用此连接时自动连接vpn&apos; 选项 - 选择配置好的 &apos;vpn&apos; 项实例 - 根据实际情况决定选择 &apos;所有用户都可以使用这个连接&apos; - 点解 &apos;保存&apos; 按钮 + 收官 - 断开WI-FI连接 - 重新连接该配置好的WI-FI实例 按照这么一路走来，’vpn server 应该时配置好了，如果有点啥出入，问google吧。当然也可以邮箱联系我 doc2git@yahoo.com","categories":[],"tags":[]},{"title":"linux词典下载地址","slug":"linux词典下载地址","date":"2017-10-03T00:48:31.066Z","updated":"2017-10-03T08:55:04.659Z","comments":true,"path":"2017/10/03/linux词典下载地址/","link":"","permalink":"http://doc2git/2017/10/03/linux词典下载地址/","excerpt":"","text":"linux词典下载地址星际译王中文词典下载： http://download.huzheng.org星际译王中文词典下载： http://download.huzheng.org/zh_CN/","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://doc2git/tags/linux/"},{"name":"词典","slug":"词典","permalink":"http://doc2git/tags/词典/"},{"name":"翻译","slug":"翻译","permalink":"http://doc2git/tags/翻译/"}]},{"title":"webpack1指南","slug":"JavaScript模块化编程的发展历程","date":"2017-10-02T00:18:29.349Z","updated":"2017-10-02T08:56:45.542Z","comments":true,"path":"2017/10/02/JavaScript模块化编程的发展历程/","link":"","permalink":"http://doc2git/2017/10/02/JavaScript模块化编程的发展历程/","excerpt":"","text":"webpack1指南： https://www.gitbook.com/book/toobug/webpack-guide虽然webpack1渐渐远去，但有些精巧的小项目是基于webpack1构建的，个人觉得还是有必要熟悉一下。一是为了避免重复早车轮，二是为了深入了解一些经典实现思想（比如《非模块化文件打包》&lt;gh-pages on github支持一个index.html文件,不提供同repo下的资源请求，我目前在摸索快速美观单页repo的高效部署； 又比如《UMD模块打包》，这里面有判断当前宿主js环境规范的经典实现， 编写跨规范js包可以直接拿来用；etc.）。模块化： https://webpack.toobug.net/zh-cn/chapter1/原始时代： https://webpack.toobug.net/zh-cn/chapter1/ancient-times.html命名空间时代： https://webpack.toobug.net/zh-cn/chapter1/name-spacing-age.html模块化时代： https://webpack.toobug.net/zh-cn/chapter1/modular-age.htmlwepack入门： https://webpack.toobug.net/zh-cn/chapter2/入口文件： https://webpack.toobug.net/zh-cn/chapter2/entry-point.html非模块化文件打包：https://webpack.toobug.net/zh-cn/chapter2/non-moduler.htmlAMD模块打包： https://webpack.toobug.net/zh-cn/chapter2/amd.htmlNode模块和NPM： https://webpack.toobug.net/zh-cn/chapter2/node-modules-and-npm.htmlUMD模块打包： https://webpack.toobug.net/zh-cn/chapter2/umd.htmlwebpack进阶： https://webpack.toobug.net/zh-cn/chapter3/CLI与API使用模式： https://webpack.toobug.net/zh-cn/chapter3/cli-api.html基本配置项： https://webpack.toobug.net/zh-cn/chapter3/config.html分片： https://webpack.toobug.net/zh-cn/chapter3/chunks.htmlCommonChuncks插件： https://webpack.toobug.net/zh-cn/chapter3/common-chunks-plugin.html高级配置项： https://webpack.toobug.net/zh-cn/chapter3/advanced-config.htmlLoader使用Loader: https://webpack.toobug.net/zh-cn/chapter4/using-loaders.html常用Loader:bundle-loader: https://webpack.toobug.net/zh-cn/chapter4/bundle-loader.htmlexports-loader: https://webpack.toobug.net/zh-cn/chapter4/exports-loader.htmlimports-loader: https://webpack.toobug.net/zh-cn/chapter4/imports-loader.htmlexpose-loader: https://webpack.toobug.net/zh-cn/chapter4/expose-loader.html杂谈TypeScript和Vue: https://webpack.toobug.net/zh-cn/chapter6/ts-and-vue.html信息提供： https://www.gitbook.com/book/toobug/webpack-guide","categories":[{"name":"gitbook释出","slug":"gitbook释出","permalink":"http://doc2git/categories/gitbook释出/"}],"tags":[{"name":"JS模块化编程的发展历程","slug":"JS模块化编程的发展历程","permalink":"http://doc2git/tags/JS模块化编程的发展历程/"},{"name":"webpack1， 入门","slug":"webpack1，-入门","permalink":"http://doc2git/tags/webpack1，-入门/"},{"name":"进阶","slug":"进阶","permalink":"http://doc2git/tags/进阶/"},{"name":"loader","slug":"loader","permalink":"http://doc2git/tags/loader/"},{"name":"集成gulp--missed","slug":"集成gulp-missed","permalink":"http://doc2git/tags/集成gulp-missed/"},{"name":"jquery引入--missed","slug":"jquery引入-missed","permalink":"http://doc2git/tags/jquery引入-missed/"},{"name":"ts","slug":"ts","permalink":"http://doc2git/tags/ts/"},{"name":"vue","slug":"vue","permalink":"http://doc2git/tags/vue/"}]},{"title":"开源实时服务器deepstream.io","slug":"开源实时服务器deepstream.io","date":"2017-10-01T04:44:11.939Z","updated":"2017-10-01T12:51:56.000Z","comments":true,"path":"2017/10/01/开源实时服务器deepstream.io/","link":"","permalink":"http://doc2git/2017/10/01/开源实时服务器deepstream.io/","excerpt":"","text":"参考链接：https://deepstreamhub.com/tutorials/getting-started/javascript/?iohttps://www.infoq.com/news/2016/07/deepstream-real-time-serverhttp://www.jianshu.com/p/8dc7bae43d3e","categories":[],"tags":[{"name":"开源","slug":"开源","permalink":"http://doc2git/tags/开源/"},{"name":"实时服务器","slug":"实时服务器","permalink":"http://doc2git/tags/实时服务器/"},{"name":"deepstream.io","slug":"deepstream-io","permalink":"http://doc2git/tags/deepstream-io/"}]},{"title":"any-cgi-script--nginx--ubuntu16","slug":"enable-any-cgi-script-nginx-ubuntu16","date":"2017-09-30T07:04:47.000Z","updated":"2017-09-30T07:10:51.222Z","comments":true,"path":"2017/09/30/enable-any-cgi-script-nginx-ubuntu16/","link":"","permalink":"http://doc2git/2017/09/30/enable-any-cgi-script-nginx-ubuntu16/","excerpt":"","text":"title: any-cgi-script–nginx–ubuntu16date: 2017-09-30 15:04:47 tags: [torake, ubuntu, linux, cgi, nginx, automatice]配置过程： 基于nginx和ubuntu的任意类型脚本的CGI支持http://xfeng.me/nginx-support-fcgi/https://askubuntu.com/questions/264053/how-to-install-c-fastcgi-development-libraryhttps://answers.launchpad.net/esys-particle/+question/365307http://www.jb51.net/article/106375.htm","categories":[],"tags":[{"name":"torake","slug":"torake","permalink":"http://doc2git/tags/torake/"},{"name":"ubuntu","slug":"ubuntu","permalink":"http://doc2git/tags/ubuntu/"},{"name":"linux","slug":"linux","permalink":"http://doc2git/tags/linux/"},{"name":"cgi","slug":"cgi","permalink":"http://doc2git/tags/cgi/"},{"name":"nginx","slug":"nginx","permalink":"http://doc2git/tags/nginx/"},{"name":"automatice","slug":"automatice","permalink":"http://doc2git/tags/automatice/"}]},{"title":"给小黄的链接","slug":"给小黄的链接","date":"2017-09-28T08:56:08.000Z","updated":"2017-09-28T09:02:28.905Z","comments":true,"path":"2017/09/28/给小黄的链接/","link":"","permalink":"http://doc2git/2017/09/28/给小黄的链接/","excerpt":"","text":"第一次是这个vue书城： https://github.com/zhufengzhufeng/201704node/tree/master/vue-book/vue-webpack第二次是react轮播图： https://github.com/zhufengnodejs/zhufengketang-react","categories":[],"tags":[]},{"title":"CSS,font-family,好看常用的中文字体","slug":"css-font-family","date":"2017-09-27T13:34:37.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"2017/09/27/css-font-family/","link":"","permalink":"http://doc2git/2017/09/27/css-font-family/","excerpt":"","text":"CSS,font-family,好看常用的中文字体 例1（小米米官网）：font-family: “Arial”,”Microsoft YaHei”,”黑体”,”宋体”,sans-serif; 例2（淘宝技术研发中心）：font: 12px/1.5 Tahoma,Helvetica,Arial,’宋体’,sans-serif; 例3（加网 ）：font: 14px/1.5 ‘Microsoft YaHei’,arial,tahoma,\\5b8b\\4f53,sans-serif; 例4（淘宝UED）：font: 12px/1 Tahoma,Helvetica,Arial,”\\5b8b\\4f53”,sans-serif; 例5（一淘UX）:font-family: Helvetica, ‘Hiragino Sans GB’, ‘Microsoft Yahei’, ‘微软雅黑’, Arial, sans-serif; font: 12px/1 Tahoma,Helvetica,Arial,”\\5b8b\\4f53”,sans-serif; 另外： HTML，CSS，font-family：中文字体的英文名称 宋体 SimSun 黑体 SimHei 微软雅黑 Microsoft YaHei 微软正黑体 Microsoft JhengHei 新宋体 NSimSun 新细明体 PMingLiU 细明体 MingLiU 标楷体 DFKai-SB 仿宋 FangSong 楷体 KaiTi 仿宋_GB2312 FangSong_GB2312 楷体_GB2312 KaiTi_GB2312 宋体：SimSuncss中中文字体（font-family）的英文名称 Mac OS的一些： 华文细黑：STHeiti Light [STXihei] 华文黑体：STHeiti 华文楷体：STKaiti 华文宋体：STSong 华文仿宋：STFangsong 儷黑 Pro：LiHei Pro Medium 儷宋 Pro：LiSong Pro Light 標楷體：BiauKai 蘋果儷中黑：Apple LiGothic Medium 蘋果儷細宋：Apple LiSung Light Windows的一些： 新細明體：PMingLiU 細明體：MingLiU 標楷體：DFKai-SB 黑体：SimHei 新宋体：NSimSun 仿宋：FangSong 楷体：KaiTi 仿宋_GB2312：FangSong_GB2312 楷体_GB2312：KaiTi_GB2312 微軟正黑體：Microsoft JhengHei 微软雅黑体：Microsoft YaHei 装Office会生出来的一些： 隶书：LiSu 幼圆：YouYuan 华文细黑：STXihei 华文楷体：STKaiti 华文宋体：STSong 华文中宋：STZhongsong 华文仿宋：STFangsong 方正舒体：FZShuTi 方正姚体：FZYaoti 华文彩云：STCaiyun 华文琥珀：STHupo 华文隶书：STLiti 华文行楷：STXingkai 华文新魏：STXinwei Windows 中的中文字体。 在默认情况下，也就是未自行安装新字体或者 Office 等文字处理软件的情况下，Windows 默认提供下列字体： Windows 95/98/98SE 宋体、黑体、楷体_GB2312、仿宋_GB2312 Windows XP/2000/2003/ME/NT 宋体/新宋体、黑体、楷体_GB2312、仿宋_GB2312 (Windows XP SP3 宋体-PUA) Windows Vista/7/2008 宋体/新宋体、黑体、楷体、仿宋、微软雅黑、SimSun-ExtB 那么每种字体能显示那些汉字呢？ Vista 之前的 Windows 中宋体/新宋体、黑体支持 GBK 1.0 字符集， 楷体_GB2312、仿宋_GB2312 支持 GB2312-80 字符集。 （注：Windows 3.X 只能支持 GB2312-80 字符集） Vista 及之后的 Windows 中宋体/新宋体、黑体、楷体、仿宋、微软雅黑支持 GB18030-2000 字符集， SimSun-ExtB 只支持 GB18030-2005 字符集扩展 B 部分。 下面对字符集进行简单的介绍： GB2312-80 &lt; GBK 1.0 &lt; GB18030-2000 &lt; GB18030-2005 GB2312-80 中的字符数量最少，GB18030-2005 字符数量最多。 GB2312-80 是最早的版本，字符数比较少； GBK 1.0 中的汉字大致与 Unicode 1.1 中的汉字数量相同； GB18030-2000 中的汉字大致与 Unicode 3.0 中的汉字数量相同，主要增加了扩展 A 部分； GB18030-2005 中的汉字大致与 Unicode 4.1 中的汉字数量相同，主要增加了扩展 B 部分； 由于 Unicode 5.2 的发布，估计 GB18030 会在近期发布新版本，增加扩展 C 部分。 需要说明的是在 GB18030 中扩展 B 部分并不是强制标准。 如果想查看 GB18030 的标准文本，请访问 http://www.gb168.cn 中的强标阅读。 如果想了解 Unicode 的内容，请访问 http://www.unicode.org。 现在纠正网上普遍的一个错误： GB18030-2000 和 GB18030-2005 都不支持单字节的欧元符号 与简体中文有关的代吗页如下： 936 gb2312 简体中文(GB2312)————其实是GBK 10008 x-mac-chinesesimp 简体中文(Mac) 20936 x-cp20936 简体中文(GB2312-80) 50227 x-cp50227 简体中文(ISO-2022) 51936 EUC-CN 简体中文(EUC) 52936 hz-gb-2312 简体中文(HZ) 54936 GB18030 简体中文(GB18030) 补充： 使用楷体_GB2312、仿宋_GB2312后，在 Windows 7/Vista/2008 中可能不再显示为对应的字体。 这是因为 Windows 7/Vista/2008 中有楷体、仿宋，默认情况下没有楷体_GB2312、仿宋_GB2312，字体名称相差“_GB2312”。","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://doc2git/tags/CSS/"},{"name":"font-family","slug":"font-family","permalink":"http://doc2git/tags/font-family/"},{"name":"好看常用的中文字体","slug":"好看常用的中文字体","permalink":"http://doc2git/tags/好看常用的中文字体/"}]},{"title":"font-icon","slug":"font-icon-md","date":"2017-09-27T13:06:45.000Z","updated":"2017-09-30T06:50:03.214Z","comments":true,"path":"2017/09/27/font-icon-md/","link":"","permalink":"http://doc2git/2017/09/27/font-icon-md/","excerpt":"","text":"title: font-icon.mddate: 2017-09-27 21:06:45 tags: [font-icon, Glyphicon, 字体图标, icon, src, icon-src]font awesomeurl: https://getbootstrap.com/docs/3.3/components/ font awesomefont awesome bootstrap Glyphiconsurl: https://getbootstrap.com/docs/3.3/components/ bootstrap Glyphiconsbootstrap Glyphicons 阿里巴巴矢量图标库url: http://www.iconfont.cn/collections 阿里巴巴矢量图标库阿里巴巴矢量图标库","categories":[],"tags":[{"name":"font-icon","slug":"font-icon","permalink":"http://doc2git/tags/font-icon/"},{"name":"Glyphicon","slug":"Glyphicon","permalink":"http://doc2git/tags/Glyphicon/"},{"name":"字体图标","slug":"字体图标","permalink":"http://doc2git/tags/字体图标/"},{"name":"icon","slug":"icon","permalink":"http://doc2git/tags/icon/"},{"name":"src","slug":"src","permalink":"http://doc2git/tags/src/"},{"name":"icon-src","slug":"icon-src","permalink":"http://doc2git/tags/icon-src/"}]},{"title":"crawl 爬虫","slug":"crawl","date":"2017-09-27T12:33:29.000Z","updated":"2017-10-15T08:46:32.051Z","comments":true,"path":"2017/09/27/crawl/","link":"","permalink":"http://doc2git/2017/09/27/crawl/","excerpt":"","text":"title: crawl 爬虫date: 2017-09-27 20:33:29 tags: [crawl, 爬虫]用到了 request iconv-lite cheerio debug async express mongoose ejs cron 等js模块；实现了目标DOM元素获取。 node 爬虫url: https://github.com/doc2git/201704crawl node 爬虫目标DOM元素获取 强大的傻瓜式wget爬虫命令： 我用得最早，用得最多的wget爬虫命令： wget –mirror –convert-links http://example.com http://pkuwwt.github.io/linux/2015-09-26-all-the-wget-commands-you-should-know 我2017年10月最喜欢的命令： 爬取制定页面及应用资源：12wget -page-requisites --span-hosts --convert-links --adjust-extension http://example.com/dir/filewget -p -H -k -E http://example.com/dir/file","categories":[],"tags":[{"name":"crawl","slug":"crawl","permalink":"http://doc2git/tags/crawl/"},{"name":"爬虫","slug":"爬虫","permalink":"http://doc2git/tags/爬虫/"}]},{"title":"resources-for-bootstrap","slug":"resources-for-bootstrap","date":"2017-09-27T08:59:45.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"2017/09/27/resources-for-bootstrap/","link":"","permalink":"http://doc2git/2017/09/27/resources-for-bootstrap/","excerpt":"","text":"for bootstrap3: This is headers for bootstrap3:url: https://getbootstrap.com/docs/3.3/getting-started/ [Getting started, for bootstrap3],bootstrap3 Bootstrap 4 Beta is here! for bootstrap4:url: https://v4-alpha.getbootstrap.com/components/navbar/ [Getting started, for bootstrap3],bootstrap3","categories":[],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://doc2git/tags/bootstrap/"},{"name":"ui-src","slug":"ui-src","permalink":"http://doc2git/tags/ui-src/"},{"name":"template","slug":"template","permalink":"http://doc2git/tags/template/"},{"name":"demoes","slug":"demoes","permalink":"http://doc2git/tags/demoes/"},{"name":"link","slug":"link","permalink":"http://doc2git/tags/link/"}]},{"title":"howto-hexo","slug":"howto-hexo","date":"2017-09-27T05:02:07.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"2017/09/27/howto-hexo/","link":"","permalink":"http://doc2git/2017/09/27/howto-hexo/","excerpt":"","text":"hexo offical manual.hexo Documentation","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://doc2git/tags/hexo/"},{"name":"turtor","slug":"turtor","permalink":"http://doc2git/tags/turtor/"}]},{"title":"vim-config-for-rails-developement","slug":"vim-config-for-rails-developement","date":"2017-09-27T02:46:13.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"2017/09/27/vim-config-for-rails-developement/","link":"","permalink":"http://doc2git/2017/09/27/vim-config-for-rails-developement/","excerpt":"","text":"Follow jianjiss.com to quickly create rails development:Walkthrough of my .vimrc file for Ruby development How to manger vim plugins by vundle.vim?vundle.vim","categories":[],"tags":[{"name":"try","slug":"try","permalink":"http://doc2git/tags/try/"},{"name":"vim","slug":"vim","permalink":"http://doc2git/tags/vim/"},{"name":"rails","slug":"rails","permalink":"http://doc2git/tags/rails/"},{"name":"ruby","slug":"ruby","permalink":"http://doc2git/tags/ruby/"},{"name":"development","slug":"development","permalink":"http://doc2git/tags/development/"}]},{"title":"test-js-2","slug":"test-js-2","date":"2017-09-26T02:20:59.000Z","updated":"2017-09-28T05:19:57.594Z","comments":true,"path":"2017/09/26/test-js-2/","link":"","permalink":"http://doc2git/2017/09/26/test-js-2/","excerpt":"","text":"can the js run normal?","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://doc2git/tags/test/"},{"name":"try","slug":"try","permalink":"http://doc2git/tags/try/"},{"name":"why","slug":"why","permalink":"http://doc2git/tags/why/"}]},{"title":"test-js","slug":"test-js","date":"2017-09-25T16:23:00.000Z","updated":"2017-10-12T14:56:55.950Z","comments":true,"path":"2017/09/26/test-js/","link":"","permalink":"http://doc2git/2017/09/26/test-js/","excerpt":"","text":"测试能否正常运行javascript代码 var jsonImg = document.createElement('img'); jsonImg.src = ''; jsonImg.src = 'http://doc2git.com.cn/json-str-for-main-item/'; jsonImg.onload = function(){ //console.log(123); console.log(jsonImg.src); } console.log(document.querySelector('iframe')); console.log('try console.log()'); alert('type alert');","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://doc2git/tags/test/"},{"name":"try","slug":"try","permalink":"http://doc2git/tags/try/"},{"name":"js","slug":"js","permalink":"http://doc2git/tags/js/"},{"name":"brave","slug":"brave","permalink":"http://doc2git/tags/brave/"}]},{"title":"开始使用","slug":"hexo-editor-开始使用","date":"2016-06-20T12:47:46.000Z","updated":"2017-09-29T02:21:53.838Z","comments":true,"path":"2016/06/20/hexo-editor-开始使用/","link":"","permalink":"http://doc2git/2016/06/20/hexo-editor-开始使用/","excerpt":"","text":"安装依赖 Node.js v4.0+ Git 下载1git clone https://github.com/tajpure/hexo-editor.git 初始化进入hexo-editor目录，执行1npm install --production 配置_config.yml_config.yml位于hexo-editor根目录，提供了一些简单的配置选项给用户设置。 设置环境 如果在桌面环境使用，将local改为true，此时无需登录即可使用。 如果部署在服务器，请使用local的默认值false，此时需要配置用户名和密码。 设置用户名和密码 如果在桌面环境使用，请忽略此配置 将要使用的用户名和密码依次填到username和password中，请不要使用默认值。 设置博客目录(使用绝对路径)将hexo博客的目录路径配置到base_dir, 例:如果你的博客目录为”/home/user/blog”，则将base_dir设为该地址。 如果需要使用hexo-editor提供的deploy功能，你需要设好hexo的deploy配置，并添加你的ssh key至deploy服务器的authorized_keys。使其不用密码即可deploy。 设置端口默认端口为2048，如果想自定义端口，直接修改即可。 启动1npm start","categories":[{"name":"文档","slug":"文档","permalink":"http://doc2git/categories/文档/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://doc2git/tags/hexo/"},{"name":"editor","slug":"editor","permalink":"http://doc2git/tags/editor/"},{"name":"markdown","slug":"markdown","permalink":"http://doc2git/tags/markdown/"}]},{"title":"Getting Started","slug":"hexo-editor-Getting-Started","date":"2016-06-20T12:43:49.000Z","updated":"2017-09-30T07:16:44.518Z","comments":true,"path":"2016/06/20/hexo-editor-Getting-Started/","link":"","permalink":"http://doc2git/2016/06/20/hexo-editor-Getting-Started/","excerpt":"","text":"Dependencies Node.js v4.0+ Git How to Get Hexo Editor?1git clone https://github.com/tajpure/hexo-editor.git Initialization12cd hexo-editornpm install --production ConfigurationYou can change these variables in _config.yml for configuration. local If you use it in desktop, change the “local” to be true, and then you can use it without login. If deploy it on server, please use the default value “false”. You will need to authorize. username &amp; password If you use it in desktop, please skip this step. Please use your own username and password, Do not use the defaults. base_dir(absolute path)Set your hexo blog directory to the “base_dir”. If you need to deploy a hexo blog, you should add the SSH key to the authorized_keys of the target machine. portThe default port of Hexo Editor is 2048 start1npm start","categories":[{"name":"docs","slug":"docs","permalink":"http://doc2git/categories/docs/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://doc2git/tags/hexo/"},{"name":"editor","slug":"editor","permalink":"http://doc2git/tags/editor/"},{"name":"markdown","slug":"markdown","permalink":"http://doc2git/tags/markdown/"}]}]}